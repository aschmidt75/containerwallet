worker_processes 1;
pid /wallet/var/nginx.pid;

events {
	worker_connections 64;
	multi_accept on;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log 	/wallet/var/access.log;
	error_log 	/wallet/var/error.log;

	gzip off;

	server {
	    listen        	8443;
	    ssl 		on;
	    server_name   	wallet;
	
	    # lock down to modern protocols and pfs cs
	    ssl_protocols        	TLSv1.2;
	    ssl_ciphers          	'AES256+EECDH:AES256+EDH';
	    ssl_prefer_server_ciphers 	on;
	    ssl_session_cache 		off;
	    ssl_dhparam 		/etc/nginx/certs/dhparam.pem;
	
	    ssl_certificate      	/etc/nginx/certs/wallet.pem;
	    ssl_certificate_key  	/etc/nginx/certs/wallet.key;
	    ssl_client_certificate 	/etc/nginx/certs/cacert.pem;
	    ssl_trusted_certificate 	/etc/nginx/certs/cacert.pem;
	    #ssl_password_file		/etc/nginx/certs/passphrase-file;

	    # explicitely verify client certificate
	    ssl_verify_client 		on;
	
	    add_header Strict-Transport-Security max-age=63072000;
	    add_header X-Frame-Options DENY;
	    add_header X-Content-Type-Options nosniff;
	
	    # only allow GET
	    if ($request_method !~ ^(GET)$ ) {
	         return 444;
	    }
	    if ($ssl_client_verify !~ ^(SUCCESS)$ ) {
	         return 444;
	    }
	    # $ssl_client_i_dn

 	    # point docroot to wallet content	
    	    root           /wallet/data;
	}

}
